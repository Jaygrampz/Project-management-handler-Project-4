import java.util.Scanner;

public class UserInterface {

	public static void main(String[] args) {

		boolean registration = true;
		System.out.println("Welcome to the Poised Project Registration Interface!\n");

		while (registration) {// While loop to keep the program running
			mainMenu();
			Scanner userChoice = new Scanner(System.in);
			int choice = userChoice.nextInt();

			// This section deals with the creation of the project object
			if (choice == 1) {

				System.out.println("To create a new project file, please enter the following details: \n");

				String nameOfProject = projName();

				int numOfProject = projNum();

				String buildTypeForProject = buildType();

				String physAddForProject = physicalAddress();

				int erfForProject = erfNumber();

				float feesForProject = projFee();

				float balRemaining = projBal();

				String dueDateForProject = dueDate();

				Project newProject = new Project(nameOfProject, numOfProject, buildTypeForProject, physAddForProject,
						erfForProject, feesForProject, balRemaining, dueDateForProject);

				// Confirmation message of project creation
				System.out.println("Your project has been successfully registered");
				System.out.println(newProject.displayProj() + "\n");

				// THis piece of code deals with changing the deadline date
				System.out.println("This is your current deadline date: " + " " + newProject.getProjectDeadline() + " "
						+ "Would you like to change it? 1 - Yes or 2 - No\\n");
				Scanner dateChoice = new Scanner(System.in);
				int deadlineChoice = dateChoice.nextInt();

				if (deadlineChoice == 1) {
					System.out.println("Enter the new date: ");
					Scanner deadlineChange = new Scanner(System.in);
					String newDate = deadlineChange.nextLine();

					newProject.setProjectDeadline(newDate);

					System.out.println("Your new deadline has been successfully registered");
					System.out.println(newProject.displayProj() + "\n");
				}

				// This piece of code deals with the change of the current balance

				System.out.println("This is the current balance still to be paid: " + " " + newProject.getCurrBalance()
						+ " " + "Would you like to change it? 1 - Yes or 2 - No\\n");
				Scanner balChoice = new Scanner(System.in);
				int currBalChoice = balChoice.nextInt();

				if (currBalChoice == 1) {
					System.out.println("Enter the new balance: ");
					Scanner balanceChange = new Scanner(System.in);
					float newBalance = balanceChange.nextFloat();

					newProject.setCurrBalance(newBalance);
				}

				// Finalizing the project
				System.out.println(
						"Finalize the project by generating an invoice for the client. 1 - Proceed\n 2 - Return to main menu");
				Scanner finalInput = new Scanner(System.in);
				int finalChoice = finalInput.nextInt();

				if (finalChoice == 1) {
					System.out.println(
							"An invoice will be generated by the system. Please enter the client's details: \n");
					// Capturing client details to crate client object
					String nameOfClient = customerName();

					int teleOfClient = customerTelNum();

					String emailOfClient = customerEmailAddress();

					String addressOfClient = customerPhysAdd();

					Client newClient = new Client(nameOfClient, teleOfClient, emailOfClient, addressOfClient);// Client
					// object

					float amountToPay = newProject.getProjectFee() - newProject.getCurrBalance();// The balance to still
																									// to be paid

					// Invoice generation

					if (amountToPay > 0) {
						int invoiceNum = (int) (Math.random() * 100);
						System.out.println("Invoice " + " " + invoiceNum + "\n");
						System.out.println(newClient.displayClient() + "\n");
						System.out.println("Outstanding balance: " + " " + amountToPay);

					}

				}

			} else if (choice == 2) {
				// This section will deal with the creation of the contractor object
				System.out.println("Please enter the following details to register a new contractor: \n");

				String nameOfContractor = contractorName();

				int teleOfContractor = contractorTelNum();

				String emailOfContractor = contractorEmailAddress();

				String addressOfContractor = contractorPhysAdd();

				Contractor newContractor = new Contractor(nameOfContractor, teleOfContractor, emailOfContractor,
						addressOfContractor);

				System.out.println("New contractor registered!\n");
				System.out.println(newContractor.displayContractor());

				// Updating the contractor's telephone number
				System.out.println("This is the telephone number of contractor: " + " "
						+ newContractor.getTelephoneNumber() + " . Would you like to update it? 1 - Yes\n 2 - No");
				Scanner contractorTele = new Scanner(System.in);
				int contractorChoiceTelephone = contractorTele.nextInt();

				if (contractorChoiceTelephone == 1) {
					System.out.println("Enter the new telephone number:");
					Scanner newNumber = new Scanner(System.in);
					int newTelephone = newNumber.nextInt();

					newContractor.setTelephoneNumber(newTelephone);

					System.out.println("New telephone number registered!\n");
					System.out.println(newContractor.displayContractor());
				}

				// Updating the contractors email address

				System.out.println("This is the email address of contractor: " + " " + newContractor.getEmailAddress()
						+ " . Would you like to update it? 1 - Yes\n 2 - No");
				Scanner contractorEmail = new Scanner(System.in);
				int contractorChoiceEmail = contractorEmail.nextInt();

				if (contractorChoiceEmail == 1) {
					System.out.println("Enter the new email address:");
					Scanner newEmail = new Scanner(System.in);
					String newEmailAddress = newEmail.nextLine();

					newContractor.setEmailAddress(newEmailAddress);

					System.out.println("New email address registered!\n");
					System.out.println(newContractor.displayContractor());
				}
			}

		}

	}

	// Methods to capture the details of the project
	public static String projName() {
		System.out.println("The name of the project: ");// Name of the project
		Scanner inputForName = new Scanner(System.in);
		String nameForProject = inputForName.nextLine();

		return nameForProject;
	}

	public static int projNum() {// Project Number
		System.out.println("The project number: ");
		Scanner inputForNum = new Scanner(System.in);
		int numForProject = inputForNum.nextInt();

		return numForProject;

	}

	public static String buildType() {// Building type
		System.out.println("Building type (eg. Apartment, House etc.): ");
		Scanner inputForBuild = new Scanner(System.in);
		String buildingType = inputForBuild.nextLine();

		return buildingType;
	}

	public static String physicalAddress() {// Physical address of the project
		System.out.println("The physical address of the project: ");
		Scanner inputForPhysAdd = new Scanner(System.in);
		String physicalAddress = inputForPhysAdd.nextLine();

		return physicalAddress;
	}

	public static int erfNumber() {// ERF Number
		System.out.println("The ERF number: ");
		Scanner inputForErf = new Scanner(System.in);
		int erf = inputForErf.nextInt();

		return erf;
	}

	public static float projFee() {// Total cost of the project
		System.out.println("The total fee for the project: R ");
		Scanner inputForProjFee = new Scanner(System.in);
		float fees = inputForProjFee.nextFloat();

		return fees;
	}

	public static float projBal() {// Outstanding balance of the project
		System.out.println("The fees still outstanding: R ");
		Scanner inputForProjBal = new Scanner(System.in);
		float balance = inputForProjBal.nextFloat();

		return balance;
	}

	public static String dueDate() { // Deadline of the project
		System.out.println("The deadline for the project: " + "\n");
		Scanner inputForDeadline = new Scanner(System.in);
		String deadline = inputForDeadline.nextLine();

		return deadline;
	}

	// Methods for capturing the details of the contractors
	public static String contractorName() {
		System.out.println("Contractor's name: \n");
		Scanner contrName = new Scanner(System.in);
		String conName = contrName.nextLine();

		return conName;
	}

	public static int contractorTelNum() {
		System.out.println("Contractor's telephone number: \n");
		Scanner contrTele = new Scanner(System.in);
		int conTele = contrTele.nextInt();

		return conTele;
	}

	public static String contractorEmailAddress() {
		System.out.println("Contractor's email address: \n");
		Scanner contrEmail = new Scanner(System.in);
		String conEmail = contrEmail.nextLine();

		return conEmail;
	}

	public static String contractorPhysAdd() {
		System.out.println("Contractor's physical address: ");
		Scanner contrPhysAdd = new Scanner(System.in);
		String conPhysAdd = contrPhysAdd.nextLine();

		return conPhysAdd;
	}

	// Methods for capturing the details of the customers
	public static String customerName() {
		System.out.println("Customer's name: \n");
		Scanner clientName = new Scanner(System.in);
		String cliName = clientName.nextLine();

		return cliName;
	}

	public static int customerTelNum() {
		System.out.println("Client's telephone number: \n");
		Scanner clientTele = new Scanner(System.in);
		int cliTele = clientTele.nextInt();

		return cliTele;
	}

	public static String customerEmailAddress() {
		System.out.println("Client's email address: \n");
		Scanner clientEmail = new Scanner(System.in);
		String cliEmail = clientEmail.nextLine();

		return cliEmail;
	}

	public static String customerPhysAdd() {
		System.out.println("Client's physical address: ");
		Scanner clientPhysAdd = new Scanner(System.in);
		String cliPhysAdd = clientPhysAdd.nextLine();

		return cliPhysAdd;
	}

	// Methods for capturing the details of the architect
	public static String architectName() {
		Scanner archName = new Scanner(System.in);
		String arcName = archName.nextLine();

		return arcName;
	}

	public static int architectTelNum() {
		Scanner archTele = new Scanner(System.in);
		int arcTele = archTele.nextInt();

		return arcTele;
	}

	public static String architectEmailAddress() {
		Scanner archEmail = new Scanner(System.in);
		String arcEmail = archEmail.nextLine();

		return arcEmail;
	}

	public static String architectPhysAdd() {
		Scanner archPhysAdd = new Scanner(System.in);
		String arcPhysAdd = archPhysAdd.nextLine();

		return arcPhysAdd;
	}

	public static void mainMenu() {
		System.out.println("Please select one of the following options: \n");
		System.out.println(" 1. Project registration\n" + " 2. Contractor registration\n" + " 3. View all projects\n"
				+ " 4. Search for a project");
	}

}
